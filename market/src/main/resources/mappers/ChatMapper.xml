<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team3.market.dao.ChatDAO">

	<!-- 채팅방 목록 조회 -->
	<select id="selectChatRoomsByMember" parameterType="int" resultType="ChatRoomVO">
	SELECT *
	FROM 
		chat_room
	WHERE 
		chatRoom_member_num = #{member_num}
			OR
		chatRoom_member_num2 = #{member_num};
    </select>
    
    <!-- 채팅방의 최근 메시지 송신자 정보 조회 -->
    <select id="selectSenderByChatRoom" resultType="MemberVO">
	SELECT m.*
	FROM 
		member m
			JOIN 
		chat_room cr 
				ON 
			m.member_num = cr.chatRoom_member_num2
	WHERE 
		cr.chatRoom_num = #{chatRoom_num};
    </select>
    
    <!-- 채팅방의 최근 메시지 조회 -->
    <select id="selectLatestChatByRoom" parameterType="int" resultType="com.team3.market.model.vo.ChatVO">
	SELECT *
	FROM 
		chat
	WHERE 
		chat_chatRoom_num = #{chatRoom_num}
	ORDER BY
		chat_date DESC LIMIT 1
	</select>
	
	<!-- 회원 번호로 회원 정보 조회 -->
	<select id="selectMemberById" parameterType="int" resultType="MemberVO">
        SELECT * FROM member WHERE member_num = #{member_num}
    </select>
	
	<!-- 특정 채팅방의 채팅 내역 조회 -->
    <select id="selectChatsByRoom" parameterType="int" resultType="ChatVO">
        SELECT * 
        FROM chat 
        WHERE chat_chatRoom_num = #{chatRoom_num} 
        ORDER BY chat_date ASC; <!-- 시간 순으로 정렬 -->
    </select>
    
    <insert id="insertChat">
	    INSERT INTO chat 
	    	(chat_member_num, chat_chatRoom_num, chat_content)
	    VALUES (#{chat_member_num}, #{chat_chatRoom_num}, #{chat_content});
    </insert>
    
    <select id="selectChatRoomPost" parameterType="int" resultType="PostVO">
	SELECT p.*
	FROM post p
	JOIN chat_room c ON p.post_num = c.chatRoom_post_num
	WHERE c.chatRoom_num = #{chatRoomNum}
    </select>
    
    <delete id="deleteChatRoom">
    DELETE FROM chat_room WHERE chatRoom_num = #{chatRoomNum}
    </delete>
    
    <insert id="insertNotification">
    INSERT INTO notification (
            notification_member_num,
            notification_type_num,
            notification_chatRoom_num,
            notification_message
        ) VALUES (
            #{member_num},
            #{type},
            #{chatRoom_num},
            #{content}
        )
    </insert>
    
    <select id="selectChatRoomByMember" parameterType="map" resultType="MemberVO">
        SELECT m.*
        FROM chat_room cr
        JOIN member m ON (m.member_num = CASE
            WHEN cr.chatRoom_member_num != #{member_num} THEN cr.chatRoom_member_num
            WHEN cr.chatRoom_member_num2 != #{member_num} THEN cr.chatRoom_member_num2
        END)
        WHERE cr.chatRoom_num = #{chatRoom_num}
    </select>
    
</mapper>
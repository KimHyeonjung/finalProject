<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team3.market.dao.PostDAO">
	<select id="selectPostList" resultType="PostVO">
		select 
			count(wish_post_num) as post_wishcount, 
			(select hour(TIMEDIFF(current_timestamp, post_refresh))) as post_timepassed, post.*
		from
			post
		left join 
			wish
				on post_num = wish_post_num
		where 
			post_state_num = 1
        group by post_num
		order by post_view desc, post_refresh desc;		
	</select>
	<select id="selectPost" resultType="PostVO">
		select * 
		from 
			post 
		join 
			member
			on post_member_num = member_num			
		where post_num = #{post_num}
	</select>
	<select id="selectPostMap" resultType="map">
		select count(wish_post_num) as post_wishcount, post.*, member.* 
		from 
			post 
		left join 
			wish
            on post_num = wish_post_num
		join 
			member
			on post_member_num = member_num			
		where post_num = #{post_num};
	</select>
	<update id="updateView">
		update post set post_view = post_view + 1 where post_num = #{post_num}
	</update>
	<delete id="deletePost">
		delete from post where post_num = #{post_num}
	</delete>	
	<select id="selectReport_category" resultType="ReportCategoryVO">
		select * from report_category
	</select>
	<insert id="insertReportPost">
		insert into report(report_member_num, report_post_num, report_category_num, report_content) 
		values(#{member_num}, #{report.report_post_num}, #{report.report_category_num}, #{report.report_content})
	</insert>
	<update id="updatePostReport">
		update post set post_report = post_report + 1 where post_num = #{report_post_num}
	</update>
	<select id="getReport" resultType="ReportVO">
		select * from report where report_post_num = #{report_post_num}
	</select>
	<select id="selectReportPost" resultType="ReportVO">
		select * from report where report_post_num = #{post_num} and report_member_num = #{member_num}
	</select>
	<select id="selectWish" resultType="WishVO">
		select * from wish where wish_post_num = #{post_num} and wish_member_num = #{member_num}
	</select>
	<insert id="insertWish">
		insert into wish(wish_post_num, wish_member_num) values
		(#{post_num}, #{member_num})
	</insert>
	<delete id="deleteWish">
		delete from wish where wish_post_num = #{post_num} and wish_member_num = #{member_num}
	</delete>
	<select id="selectWishPostList" resultType="PostVO">
		select (select hour(TIMEDIFF(current_timestamp, post_refresh))) as post_timepassed, post.* from wish join post
			on wish_post_num = post_num
		where wish_member_num = #{member_num}
		<choose>
			<when test="sort_type == 'date'">
				order by wish_date asc
			</when>
			<when test="sort_type == 'view'">
				order by post_view desc
			</when>
			<when test="sort_type == 'hight'">
				order by post_price desc, post_view desc
			</when>
			<when test="sort_type == 'low'">
				order by post_price asc, post_view desc
			</when>
			<otherwise>
				order by wish_date desc
			</otherwise>
		</choose>
	</select>
	
		<!-- 게시물 삽입 (생성) -->
    <insert id="insertPost" parameterType="PostVO" useGeneratedKeys="true" keyProperty="post_num">
        insert into post (
            post_member_num, post_position_num, post_way_num, post_category_num, 
            post_title, post_content, post_price, post_deal, post_address
        ) 
        values (
            #{post_member_num}, #{post_position_num}, #{post_way_num}, #{post_category_num}, 
            #{post_title}, #{post_content}, #{post_price}, #{post_deal}, #{post_address}
        )
    </insert>
    
    <insert id="insertFile">
		insert into file(file_name, file_ori_name, file_target_table, file_target_num)
		values(#{file_name},#{file_ori_name},#{file_target_table},#{file_target_num})
	</insert>
    
    <!-- 카테고리 목록을 가져오는 쿼리 -->
	<select id="selectCategoryList" resultType="com.team3.market.model.vo.CategoryVO">
	    SELECT category_num, category_name FROM category
	</select>
	<select id="selectMyPostList" resultType="PostVO">
		select 
			*
		from
			post
		where 
			post_state_num = 1 and
			post_member_num = #{member_num}
		<choose>
			<when test="type == 'selling'">
				and post_position_num = 1
			</when>
			<when test="type == 'buying'">
				and post_position_num = 2
			</when>
			<when test="type == 'forfree'">
				and post_position_num = 3
			</when>
			<when test="type == 'reserved'">
				and post_position_num = 4
			</when>
			<when test="type == 'soldout'">
				and post_position_num = 5
			</when>
		</choose>
		and post_title like concat('%', #{search}, '%')
		order by post_refresh desc 
		limit #{pageStart}, #{perPageNum}
	</select>	
	<select id="selectTotalCountMyPost" resultType="int">
		select 
			count(*)
		from
			post
		where post_member_num = #{member_num}
		<choose>
			<when test="type == 'selling'">
				and post_position_num = 1
			</when>
			<when test="type == 'buying'">
				and post_position_num = 2
			</when>
			<when test="type == 'forfree'">
				and post_position_num = 3
			</when>
			<when test="type == 'reserved'">
				and post_position_num = 4
			</when>
			<when test="type == 'soldout'">
				and post_position_num = 5
			</when>
		</choose>
		and post_title like concat('%', #{search}, '%')
	</select>
	<update id="updatePosition">
		update post set post_position_num = #{post_position_num} where post_num = #{post_num}
	</update>
	<update id="updateRefresh">
		update post set post_refresh = current_timestamp where post_num = #{post_num}
	</update>
	<update id="updateDelPost">
		update post set post_state_num = 3 where post_num = #{post_num}
	</update>
	<select id="selectChatRoomChk" resultType="ChatRoomVO">
		select * from chat_room where chatRoom_post_num = #{post_num}
	</select>
	<select id="selectWalletChk" resultType="WalletVO">
		select * from wallet where wallet_post_num = #{post_num}
	</select>
	<select id="selectAfterChk" resultType="AfterVO">
		select * from after where after_post_num = #{post_num}
	</select>
	<select id="selectReportChk" resultType="ReportVO">
		select * from report where report_post_num = #{post_num}
	</select>
	<delete id="deletePostAllWish">
		delete from wish where wish_post_num = #{post_num}
	</delete>
	<delete id="deleteFile">
		delete from file where file_num = #{file_num}
	</delete>
	<select id="selectFileList" resultType="FileVO">
		select * from file where file_target_table = #{target} and file_target_num = #{target_num}
	</select>
	<select id="selectFile" resultType="FileVO">
		select * from file where file_target_table = #{target} and file_target_num = #{target_num}
		order by file_num
		limit 0, 1
	</select>
	<select id="selectChatRoom" resultType="ChatRoomVO">
		select * from chat_room 
		where 
			chatRoom_member_num = #{member_num} and 
			chatRoom_member_num2 = #{member_num2} and
			chatRoom_post_num = #{post_num}
	</select>
	<insert id="insertNotification">
		insert into 
			notification(notification_member_num, notification_type_num, notification_post_num, notification_message) values
			(#{member_num}, #{type}, #{post_num}, #{propStr})
	</insert>
	<insert id="insertChatRoom" parameterType="ChatRoomVO" useGeneratedKeys="true" keyProperty="chatRoom_num">
		insert into chat_room(chatRoom_member_num, chatRoom_member_num2, chatRoom_post_num) values
			(#{chatRoom_member_num}, #{chatRoom_member_num2}, #{chatRoom_post_num})
	</insert>
	<insert id="insertChat">
		insert into chat(chat_member_num, chat_chatRoom_num, chat_content) values 
			(#{chat_member_num}, #{chat_chatRoom_num}, #{chat_content})
	</insert>
	<select id="selectNotification" resultType="NotificationVO">
		select * from notification
		join notification_type
			on notification.notification_type_num = notification_type.notification_type_num 
		where 
			notification_member_num = #{member_num} and
			notification_read = false
	</select>
	<update id="updateNotiReadTrue">
		update notification set notification_read = true 
		where 
			notification_num = #{notification_num} and notification_read = false
	</update>
	<select id="selectNotReadCount" resultType="int">
		select count(*) from notification where notification_member_num = #{member_num} and notification_read = false
	</select>
	<select id="selectMember" resultType="MemberVO">
		select * from member where member_num = #{member_num}
	</select>
	<resultMap id="CombineNotificationWithFileResultMap" type="com.team3.market.model.dto.CombineNotificationWithFileDTO">
		<association property="notification" javaType="NotificationVO">
        <id property="notification_num" column="notification_num"/>
        <result property="notification_member_num" column="notification_member_num"/>
        <result property="notification_type_num" column="notification_type_num"/>
        <result property="notification_post_num" column="notification_post_num"/>
        <result property="notification_message" column="notification_message"/>
        <result property="notification_read" column="notification_read"/>
        <result property="notification_date" column="notification_date"/>
    </association>
    <association property="file" javaType="FileVO">
        <id property="file_num" column="file_num"/>
        <result property="file_name" column="file_name"/>
        <result property="file_ori_name" column="file_ori_name"/>
        <result property="file_target_table" column="file_target_table"/>
        <result property="file_target_num" column="file_target_num"/>
    </association>
	</resultMap>
	<select id="selectNotificationListWithFile" resultMap="CombineNotificationWithFileResultMap">
		select a.*, b.* from notification a 
		left join (WITH RankedRows AS (
		    SELECT *, ROW_NUMBER() OVER (PARTITION BY file_target_num ORDER BY file_num) as row_num
		    FROM file where file_target_table = 'post'
		)
		select * from RankedRows
		where row_num = 1) b 
			on a.notification_post_num = b.file_target_num
		where notification_member_num = #{member_num} and notification_read = false
	</select>
	<resultMap id="CombinePostWithFileResultMap" type="com.team3.market.model.dto.CombinePostWithFileDTO">
		<association property="post" javaType="PostVO">
        <id property="post_num" column="post_num"/>
        <result property="post_category_num" column="post_category_num"/>
        <result property="post_title" column="post_title"/>
        <result property="post_price" column="post_price"/>
        <result property="post_deal" column="post_deal"/>
        <result property="post_refresh" column="post_refresh"/>
        <result property="post_address" column="post_address"/>
        <result property="post_address" column="post_address"/>
        <result property="post_view" column="post_view"/>
    </association>
    <association property="file" javaType="FileVO">
        <id property="file_num" column="file_num"/>
        <result property="file_name" column="file_name"/>
        <result property="file_ori_name" column="file_ori_name"/>
        <result property="file_target_table" column="file_target_table"/>
        <result property="file_target_num" column="file_target_num"/>
    </association>
	</resultMap>
	<select id="selectPostListWithFileByCategory" resultMap="CombinePostWithFileResultMap">
		select (select hour(TIMEDIFF(current_timestamp, a.post_refresh))) as post_timepassed, a.*, b.* from post a 
		left join (WITH RankedRows AS (
		    SELECT *, ROW_NUMBER() OVER (PARTITION BY file_target_num ORDER BY file_num) as row_num
		    FROM file where file_target_table = 'post'
		)
		select * from RankedRows
		where row_num = 1) b 
			on a.post_num = b.file_target_num
		where post_category_num = #{category_num}
	</select>
	<select id="selectCategoryName" resultType="String">
		select category_name from category where category_num = #{category_num}
	</select>
</mapper>